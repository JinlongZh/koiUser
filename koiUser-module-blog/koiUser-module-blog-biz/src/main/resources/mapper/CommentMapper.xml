<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koi.blog.mapper.mysql.CommentMapper">

    <resultMap id="BaseResultMap" type="com.koi.blog.domain.entity.Comment">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="type" column="type" jdbcType="TINYINT"/>
            <result property="topicId" column="topic_id" jdbcType="BIGINT"/>
            <result property="commentContent" column="comment_content" jdbcType="VARCHAR"/>
            <result property="replyUserId" column="reply_user_id" jdbcType="BIGINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="deleted" column="deleted" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,parent_id,user_id,
        type,topic_id,comment_content,
        reply_user_id,create_time,update_time,
        deleted
    </sql>

    <select id="pageComment" resultType="com.koi.blog.domain.vo.response.CommentRespVO">
        SELECT c.id,
               c.user_id,
               u.nickname,
               u.avatar,
               c.comment_content,
               c.create_time
        FROM (SELECT *
              FROM blog_comment
              WHERE type = #{req.commentType}
                AND topic_id = #{req.topicId}
                AND parent_id IS NULL
                AND deleted = 0
              ) c
                 LEFT JOIN system_users u ON c.user_id = u.id
        ORDER BY c.id DESC
            LIMIT #{current}, #{size}
    </select>
    <select id="listReplies" resultType="com.koi.blog.domain.vo.response.ReplyRespVO">
        SELECT *
        FROM (
        SELECT
        c.id,
        c.parent_id,
        c.user_id,
        u.nickname,
        u.avatar,
        c.reply_user_id,
        ru.nickname AS reply_nickname,
        c.comment_content,
        c.create_time,
        ROW_NUMBER() over (PARTITION BY parent_id ORDER BY c.create_time ASC ) row_num
        FROM blog_comment c
        LEFT JOIN system_users u ON c.user_id = u.id
        LEFT JOIN system_users ru ON c.reply_user_id = ru.id
        where c.deleted = 0
        AND parent_id IN (
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        ) t
        WHERE
        3 >= row_num
    </select>
    <select id="listReplyCountByCommentId" resultType="com.koi.blog.domain.dto.ReplyCountDTO">
        SELECT
        parent_id AS comment_id,
        COUNT(*) AS reply_count
        FROM
        blog_comment
        WHERE
        deleted = 0
        AND parent_id IN (
        <foreach collection="commentIdList" item="commentId" separator=",">
            #{commentId}
        </foreach>
        )
        GROUP BY
        parent_id
    </select>

    <select id="pageCommentReply" resultType="com.koi.blog.domain.vo.response.ReplyRespVO">
        SELECT c.id,
               c.parent_id,
               c.user_id,
               u.nickname,
               u.avatar,
               c.reply_user_id,
               r.nickname AS reply_nickname,
               c.comment_content,
               c.create_time
        FROM blog_comment c
                 LEFT JOIN system_users u ON u.id = c.user_id
                 LEFT JOIN system_users r ON r.id = c.reply_user_id
        WHERE c.parent_id = #{commentId}
        ORDER BY c.id ASC
        LIMIT #{current}, #{pageSize}
    </select>
</mapper>
